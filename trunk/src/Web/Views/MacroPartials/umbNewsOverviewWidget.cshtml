@using Ken99.AppServices;
@using Ken99.Model.DocType;
@inherits Umbraco.Web.Macros.PartialViewMacroPage
@{
    
    // Similar to above: find all pages with document type umbNewsItem under the news overview page
    // Then order them, first by publishDate (a property the editor can explicitly set on the news item)
    // and then by createDate, which is set by Umbraco automatically when a page gets created.
    // Finally, take the first 5 items to show in the news overview
    //var newsItems = newsOverview.umbNewsItems.OrderBy("publishDate desc, createDate desc").Take(5);
    var newsItems = Model.Content.AllSortedNews(1);
    IPublishedContent featuredNewsItem = null;
    foreach(var newsitem in newsItems)
    {
        featuredNewsItem = newsitem;
    }

    var newsOverview = featuredNewsItem.AncestorOrSelf(DocTypeAlias.NewsOverview);
    // If the editor has not explicitly provided the "Page title" property page 
    // then just show the name of the page otherwise show the provided title
    var pageTitle = string.IsNullOrWhiteSpace(newsOverview.GetPropertyValue<string>(DocTypeAlias.PageTile,""))
        ? newsOverview.Name
        : newsOverview.GetPropertyValue<string>(DocTypeAlias.PageTile, "");
    
    // If the editor has not explicitly provided the "Page title" property page 
    // then just show the name of the page otherwise show the provided title
    var featuredNewsItemTitle = string.IsNullOrWhiteSpace(featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.PageTile, ""))
        ? featuredNewsItem.Name
        : featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.PageTile, "");
    
    // If the editor has not explicitly set the publishDate property then show the create date
    var featuredNewsItemDateTime = featuredNewsItem.GetPropertyValue<DateTime>(DocTypeAlias.PublishDate, default(DateTime)) == default(DateTime)
        ? featuredNewsItem.CreateDate
        : featuredNewsItem.GetPropertyValue<DateTime>(DocTypeAlias.PublishDate);
}

<!-- Blog -->
<section class="is-blog">
    <h2 class="major"><span>@pageTitle</span></h2>
    <div>
        <div class="row">
            <div class="9u">
                <div class="content content-left">
                    <!-- Featured Post -->
                    <article class="is-post">
                        <header>
                            <h3><a href="@featuredNewsItem.Url">@featuredNewsItemTitle</a></h3>
                            <span class="byline">@(featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.SubHeader, ""))</span>
                            <ul class="meta">
                                <li class="timestamp">@(featuredNewsItemDateTime.ToString("f"))</li>
                            </ul>
                        </header>

                        @if (string.IsNullOrWhiteSpace(featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.Image, "")) == false)
                        {
                            <a href="@featuredNewsItem.Url" class="image image-full"><img src="@(featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.Image, ""))" alt="" /></a>
                        }

                        @Umbraco.Truncate(featuredNewsItem.GetPropertyValue<string>(DocTypeAlias.Content, ""), 200, true, false)

                        <a href="@featuredNewsItem.Url" class="button">@Umbraco.GetDictionaryValue(AppConsts.UmbDic.RecentPostOverviewWidget_ContinueReading)</a>
                    </article>
                    <!-- /Featured Post -->
                </div>
            </div>
            <div class="3u">
                <div class="sidebar">
                    @Umbraco.RenderMacro("LatestNewsWidget")
                </div>
            </div>
        </div>
    </div>
</section>
<!-- /Blog -->